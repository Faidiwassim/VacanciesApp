// <auto-generated />
using System;
using Application.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Application.WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221212192532_mig17")]
    partial class mig17
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("VacanciesAPP.DTO.Holiday", b =>
                {
                    b.Property<Guid>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("End Date");

                    b.Property<string>("HolidayType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Holiday type");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Start Date");

                    b.HasKey("HolidayId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("VacanciesAPP.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("JobPosition")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("JobPosition");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("RestVacancyDays")
                        .HasColumnType("integer")
                        .HasColumnName("RestVacancyDays");

                    b.Property<int>("TotalVacancyDays")
                        .HasColumnType("integer")
                        .HasColumnName("TotalVacancyDays");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("VacanciesAPP.DTO.Holiday", b =>
                {
                    b.HasOne("VacanciesAPP.Models.Employee", null)
                        .WithMany("HolidaysList")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VacanciesAPP.Models.Employee", b =>
                {
                    b.Navigation("HolidaysList");
                });
#pragma warning restore 612, 618
        }
    }
}
